name: t8code serial CMake tests


#  This file is part of t8code.
#  t8code is a C library to manage a collection (a forest) of multiple
#  connected adaptive space-trees of general element types in parallel.
#
#  Copyright (C) 2024 the developers
#
#  t8code is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  t8code is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with t8code; if not, write to the Free Software Foundation, Inc.,
#  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.

on:
  workflow_call:
    inputs:
      MAKEFLAGS:
        required: true
        type: string
      SC_SERIAL_DEBUG:
        required: true
        type: string
      SC_SERIAL_RELEASE:
        required: true
        type: string
      P4EST_SERIAL_DEBUG:
        required: true
        type: string
      P4EST_SERIAL_RELEASE:
        required: true
        type: string

jobs:
  cmake_tets_serial:
    runs-on: ubuntu-latest
    container: dlramr/t8code-ubuntu:t8-dependencies
    timeout-minutes: 30
    steps:
#
# Setup
#
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: SC_P4EST_SERIAL
    - name: Update packages
      run: apt-get update && apt-get upgrade -y
      # This seems to be necessary because of the docker container
    - name: disable ownership checks
      run: git config --global --add safe.directory '*'
#
#  T8CODE
#
    # build config vars
    - name: less-test-option
      if: github.event_name == 'pull_request'
      run: export LESS_TEST_OPTION="-DT8CODE_ENABLE_LESS_TESTS=ON"
           && echo LESS_TEST_OPTION="$LESS_TEST_OPTION" >> $GITHUB_ENV
    - name: build config variables
      run: export CONFIG_OPTIONS="${LESS_TEST_OPTION} -DT8CODE_USE_SYSTEM_SC=ON -DT8CODE_USE_SYSTEM_P4EST=ON -DT8CODE_ENABLE_MPI=OFF -DT8CODE_BUILD_PEDANTIC=ON"
           && export CONFIG_SERIAL_DEBUG="$CONFIG_OPTIONS -DCMAKE_BUILD_TYPE=Debug -DSC_DIR=$SC_SERIAL_DEBUG/install/cmake -DP4EST_DIR=$P4EST_SERIAL_DEBUG/install/cmake"
           && export CONFIG_SERIAL_RELEASE="$CONFIG_OPTIONS -DCMAKE_BUILD_TYPE=Release -DSC_DIR=$SC_SERIAL_RELEASE/install/cmake -DP4EST_DIR=$P4EST_SERIAL_RELEASE/install/cmake"
           && echo CONFIG_OPTIONS="$CONFIG_OPTIONS" >> $GITHUB_ENV
           && echo CONFIG_SERIAL_DEBUG="$CONFIG_DEBUG" >> $GITHUB_ENV
           && echo CONFIG_SERIAL_RELEASE="$CONFIG_RELEASE" >> $GITHUB_ENV
    - name: Check vars
      run: echo "[$CONFIG_SERIAL_DEBUG]"
            && echo "[$CONFIG_SERIAL_RELEASE]"
# cmake and test serial (release mode)
    - name: check serial
      run: echo "Checking release mode in serial"
    - name: echo cmake line
      run: echo cmake $CONFIG_SERIAL_RELEASE
    - name: cmake serial release
      run: mkdir build_serial_release && cd build_serial_release && cmake ../ $CONFIG_RELEASE
    - name: OnFailUploadLog
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: cmake_release_serial.log
        path: build_serial_release/CMakeFiles/CMakeOutput.log
    - name: make
      run: cd build_serial_release && make $MAKEFLAGS
    - name: make install
      run: cd build_serial_release && make install $MAKEFLAGS
    - name: make test
      run: cd build_serial_release && make test $MAKEFLAGS
    - name: OnFailUploadLog
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: test-suite_release_serial.log
        path: build_serial_release/Testing/Temporary/LastTest.log
# cmake and test serial (debug mode)
    - name: check serial debug
      run: echo "Checking debugging mode in serial"
    - name: cmake serial debug
      run: mkdir build_serial_debug && cd build_serial_debug && cmake ../ $CONFIG_SERIAL_DEBUG
    - name: OnFailUploadLog
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: cmake_debug_serial.log
        path: build_serial_debug/CMakeFiles/CMakeOutput.log
    - name: make
      run: cd build_serial_debug && make $MAKEFLAGS
    - name: make install
      run: cd build_serial_debug && make install $MAKEFLAGS
    - name: make test
      run: cd build_serial_debug && make test $MAKEFLAGS
    - name: OnFailUploadLog
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: test-suite_debug_serial.log
        path: build_serial_debug/Testing/Temporary/LastTest.log
