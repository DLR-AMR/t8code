name: Tests

# The purpose of this script is for debugging and testing
# the github CI without the need to trigger the whole workflow.
# Its contents may change arbitrarily.

on:
  push:
    branches:
      - feature-*CI* # for testing this script, all feature branches with "CI" in their name
  workflow_dispatch: # Be able to trigger this manually on github.com

jobs:
  test_vars:
    runs-on: ubuntu-latest
    env:
      SC_DEBUG: ../sc/build_debug
      P4EST_DEBUG: ../p4est/build_debug
    steps:
      - name: Test vars
        run: echo "[$SC_DEBUG] [$P4EST_DEBUG]"
      - name: New envs
        run: echo NEW_VAR=blub >> $GITHUB_ENV
      - name: Test vars
        run: echo $NEW_VAR ${{ env.NEW_VAR }}

  test_cache:
    runs-on: ubuntu-latest    
    steps:
      - uses: actions/checkout@v1
      - name: define sc var
        run: hash=`git rev-parse HEAD:sc` && echo sc_commit=$hash >> $GITHUB_ENV
      - name: define p4est var
        run: hash=`git rev-parse HEAD:sc` && echo sc_commit=$hash >> $GITHUB_ENV
      - name: Test var
        run: echo $sc_commit $p4est_commit
       # Cache sc
      - name: Cache SC
        id: sc_cache
        uses: actions/cache@v2
        with:
          path: sc/build_test
          key: sc-${{ env.sc_commit }}
      - name: create build and write commit
        if: steps.sc_cache.outputs.cache-hit != 'true'
        run: mkdir sc/build_test && date >> sc/build_test/commit.log && echo $sc_commit >> sc/build_test/commit.log
      - name: print file
        run: cat sc/build_test/commit.log
